Clang:
Stage Selection Options:
(1)-E           : Run the preprocessor stage.
(2)-fsyntax-only: Run the preprocessor,parser and type checking stages
(3)-S           : Run the previous stages as well as LLVM generation and optimization stages and target-specific code generation,
                  producing an assembly file.
(4)-c           ：Run all the above, plus the assembler, generationg a target ".o" object file.
(5)             : If no stage selection option, all stage above are run, and the linker is run to combine the results into an executable 
                  or shared library.
GCC:
Stage Selection Option:
(1)-E           : Stop after the preprocessing stage; do not run the compiler proper. The output
                  is in the form of preprocessed source code, which is sent to the standard output.
                  Input files that don’t require preprocessing are ignored.
(2)-fsyntax-only  : Check the syntax of the input source code, report any warnings or errors, and stop.       
(3)-S           : Stop after the stage of compilation proper; do not assemble. The output is in
                  the form of an assembler code file for each non-assembler input file specified.
                  By default, the assembler file name for a source file is made by replacing the
                  suffix ‘.c’, ‘.i’, etc., with ‘.s’.
                  Input files that don’t require compilation are ignored.
(4)-c           : Compile or assemble the source files, but do not link. The linking stage simply
                  is not done. The ultimate output is in the form of an object file for each source file.
                  By default, the object file name for a source file is made by replacing the suffix
                  ‘.c’, ‘.i’, ‘.s’, etc., with ‘.o’.
                  Unrecognized input files, not requiring compilation or assembly, are ignored.
(5)             : If no stage selection option, all stage above are run, and the linker is run to combine the results into an executable 
                  or shared library.           
Stage Selection Option Summary:
                              -S is used to generate assembly code. -c is used to generate object code, but not link. 
                              no option is run all the stage.
Clang                              
Language Selection and Mode Options
(1) -x           ： Treat subsequent input files as having type language.
    eg: clang -x c++ helloworld.cpp -lstdc++,  clang driver use -x option to compile C++ file.
(2)-std=         : Specify the language standard to compile for.
    eg: clang -x c++ -std=c++11 helloworld.cpp -lstdc++, specify the ISO C++ 2011 with amendments.
(3）-stdlib=     : Specify the C++ standard library to use;supported options are libstdc++ and libc++.If not specified, platform default 
                   will be used.
    note:libc++ is an implementation of the C++ standard library, targeting C++11, C++14 and above.
         http://libcxx.llvm.org/
    eg: clang++ -stdlib=libc++ helloworld.cpp -lc++abi, use the libc++ library.
GCC
Language Selection and Mode Options
(1)-x           :                          Specify the language of the following input files
                                           Permissible languages include: c c++ assembler none
                                           'none' means revert to the default behavior of
                                            guessing the language based on the file's extension
  eg: gcc -x c++ helloworld.cpp -lstdc++ , gcc driver use -x option compile C++ file.
(2)-std=        :                          Assume that the input sources are for <standard>
   eg: g++ -std=c++11 helloworld.cpp
（3）no -stdlib  :                         gcc has no stdlib option, but according to https://libcxx.llvm.org/docs/UsingLibcxx.html,
                                           gcc also could use libc++ as c++ standard library.
    note:
            g++ -nostdinc++ -I<libcxx-install-prefix>/include/c++/v1 \
                helloworld.cpp -nodefaultlibs -lc++ -lc++abi -lm -lc -lgcc_s -lgcc
         
         
         
         
         
         
         
         
